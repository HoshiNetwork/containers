name: Build & Push Containers
on:
  workflow_dispatch:

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: true
      matrix:
        arch:
          - "amd64"
        image:
          - "bird"
    steps:
      - uses: actions/checkout@v4

      - name: Set Versions
        id: set_ver
        run: |
          IMAGE_VER=`jq -r .package_version ${{matrix.image}}/versions.json`
          echo IMAGE_VER=$IMAGE_VER >> $GITHUB_OUTPUT
          ALPINE_VER=`jq -r .alpine_version ${{matrix.image}}/versions.json`
          echo ALPINE_VER=$ALPINE_VER >> $GITHUB_OUTPUT
          BUSYBOX_VER=`jq -r .busybox_version ${{matrix.image}}/versions.json`
          echo BUSYBOX_VER=$BUSYBOX_VER >> $GITHUB_OUTPUT

          COMMIT_TS=`TZ=UTC git show -s --format=%cd --date=format-local:'%y%m%d%H%M'`
          echo COMMIT_TS=$COMMIT_TS >> $GITHUB_OUTPUT

      - name: Build image
        run: |
          cd ${{matrix.image}}
          docker build . --file Dockerfile --tag ${{matrix.image}} \
            --label "runnumber=${GITHUB_RUN_ID}" \
            --build-arg="pkgver=${{steps.set_ver.outputs.IMAGE_VER}}" \
            --build-arg="alpinever=${{steps.set_ver.outputs.ALPINE_VER}}" \
            --build-arg="busyboxver=${{steps.set_ver.outputs.BUSYBOX_VER}}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        #
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{matrix.image}}

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          VERSION=${{steps.set_ver.outputs.IMAGE_VER}}-${{steps.set_ver.outputs.COMMIT_TS}}
          echo $VERSION
          docker tag ${{matrix.image}} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          docker tag ${{matrix.image}} $IMAGE_ID:${{steps.set_ver.outputs.IMAGE_VER}}
          docker push $IMAGE_ID:${{steps.set_ver.outputs.IMAGE_VER}}
          docker tag ${{matrix.image}} $IMAGE_ID:latest
          docker push $IMAGE_ID:latest

